name: Minimum set of checks

on:
  pull_request:
  push:
    tags:
      - '**[0-9]+.[0-9]+.[0-9]+*'

jobs:
  # Job 1: Run Tests
  test:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Common setup
        uses: ./.github/actions/common
        with:
          toolchain: stable

      - name: Run tests
        run: cargo test --verbose -- --show-output

  # Job 2: Run Coverage
  coverage:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Common setup
        uses: ./.github/actions/common
        with:
          toolchain: stable

      - name: Install Tarpaulin
        run: cargo install cargo-tarpaulin

      - name: Run coverage
        run: cargo tarpaulin --out Xml --fail-under 90

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: cobertura.xml
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
          verbose: true

  # Job 3: Check Formatting and Lint
  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Common setup
        uses: ./.github/actions/common
        with:
          toolchain: stable

      - name: Install Clippy and Rustfmt
        run: |
          rustup component add clippy
          rustup component add rustfmt

      - name: Check Rustfmt
        run: cargo fmt -- --check

      - name: Run Clippy
        run: cargo clippy -- -D warnings

  # Job 4: Build
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        rust: [stable, beta, nightly]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Common setup
        uses: ./.github/actions/common
        with:
          toolchain: ${{ matrix.rust }}

      - name: Build debug
        run: |
          RUSTFLAGS="-D warnings" cargo build --verbose

      - name: Build release
        run: |
          RUSTFLAGS="-D warnings" cargo build --release

  # Job 5: Audit
  audit:
    # Disabled since some dependencies are having transitively vulnerable dependencies
    if: false
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Common setup
        uses: ./.github/actions/common
        with:
          toolchain: stable

      - name: Install Audit Tool
        run: cargo install cargo-audit

      - name: Run Audit
        run: cargo audit

  # Job 6: Check Documentation        
  doc:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Common setup
        uses: ./.github/actions/common
        with:
          toolchain: stable

      - name: Check Documentation
        run: cargo doc --no-deps --document-private-items
